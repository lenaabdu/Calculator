{"version":3,"sources":["App.js","Result.js","KeyPad.js","serviceWorker.js","index.js"],"names":["App","onClick","button","calculate","reset","backspace","setState","result","state","checkResult","includes","replace","eval","e","slice","className","this","React","Component","Result","props","KeyPad","name","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0yCAKMA,I,4YACF,eAAc,IAAD,iMACT,wBADS,MAMbC,QAAU,SAAAC,GACQ,MAAXA,EACC,MAAKC,YAEU,MAAXD,EACJ,MAAKE,QAEU,OAAXF,EACJ,MAAKG,YAGL,MAAKC,SAAS,CACVC,OAAQ,MAAKC,MAAMD,OAASL,KAlB3B,MAwBbC,UAAY,WACR,IAAIM,YAAc,GAEdA,YADD,MAAKD,MAAMD,OAAOG,SAAS,MACZ,MAAKF,MAAMD,OAAOI,QAAQ,KAAK,KAG/B,MAAKH,MAAMD,OAE7B,IACI,MAAKD,SAAS,CAEVC,QAASK,KAAKH,cAAgB,IAAO,KAE9C,MAAOI,GACF,MAAKP,SAAS,CACVC,OAAQ,YAvCP,MA4CbH,MAAQ,WACJ,MAAKE,SAAS,CACVC,OAAQ,MA9CH,MAkDbF,UAAY,WACR,MAAKC,SAAS,CACVC,OAAQ,MAAKC,MAAMD,OAAOO,MAAM,GAAI,MAlDxC,MAAKN,MAAQ,CACTD,OAAQ,IAHH,M,kNAyDT,OACI,sHACA,sEACI,kEAAKQ,UAAU,mBACX,iEAAIA,UAAU,cAAd,oBACA,2DAAC,uCAAD,CAAQR,OAAQS,KAAKR,MAAMD,SAC3B,2DAAC,uCAAD,CAAQN,QAASe,KAAKf,iB,KAhExBgB,6CAAMC,WAwETlB,2B,6EC3ETmB,E,uKACQ,IACAZ,EAAWS,KAAKI,MAAhBb,OACN,OACA,oCACG,yBAAKQ,UAAY,UAChB,+BAAMR,EAAN,W,GANSU,IAAMC,WAcZC,O,6ECZTE,E,uKAEQ,IAAD,OACL,OACG,oCACC,yBAAKN,UAAY,UAChB,4BAAWO,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAnE,OACD,4BAAWA,KAAO,KAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAnE,QACA,4BAAWA,KAAO,IAAKrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAApE,OACA,4BAAUP,UAAY,YAAYO,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAA1F,OAA+G,6BAG/G,4BAAQA,KAAO,IAAKrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACA,4BAASA,KAAO,IAAGrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAhE,OACA,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACA,4BAASP,UAAY,YAAYO,KAAO,IAAGrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAxF,OAA6G,6BAG7G,4BAAQA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAhE,OACC,4BAAQA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAhE,OACA,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACA,4BAASP,UAAY,YAAYO,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAzF,OAA8G,6BAE/G,4BAASA,KAAO,IAAGrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAhE,OACA,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACA,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACD,4BAAUP,UAAY,YAAYO,KAAO,IAAKrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAA3F,OAAgH,6BAG/G,4BAASA,KAAO,IAAMrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAnE,OACD,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,OACC,4BAASA,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAjE,MACA,4BAAQP,UAAY,YAAaO,KAAO,IAAIrB,QAAY,SAAAY,GAAC,OAAI,EAAKO,MAAMnB,QAAQY,EAAEU,OAAOD,QAAzF,UAA8G,mC,GAhCrGL,IAAMC,WA0CZG,O,gKClCKG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC/B,EAAA,EAAD,OAEFgC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ade3e0dc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Result from \"./Result\"\nimport KeyPad from \"./KeyPad\";\n\nclass App extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            result: \"\"\n        }\n    }\n    onClick = button => {\n        if(button === \"=\"){\n            this.calculate()\n        }\n        else if(button === \"C\"){\n            this.reset()\n        }\n        else if(button === \"CE\"){\n            this.backspace()\n        }\n        else {\n            this.setState({\n                result: this.state.result + button\n                \n                \n            })\n        }\n    };\n    calculate = () => {\n        var checkResult = ''\n        if(this.state.result.includes('--')){\n            checkResult = this.state.result.replace('--','+')\n        }\n        else {\n            checkResult = this.state.result\n        }\n        try {\n            this.setState({\n                // eslint-disable-next-line\n                result: (eval(checkResult) || \"\" ) + \"\"\n            })\n     } catch (e) {\n            this.setState({\n                result: \"error\"\n            })\n        }\n    };\n\n    reset = () => {\n        this.setState({\n            result: \"\"\n        })\n    };\n\n    backspace = () => {\n        this.setState({\n            result: this.state.result.slice(0, -1)\n        })\n    };\n\n    render() {\n        return (\n            <>\n            <div>\n                <div className=\"calculator-body\">\n                    <h1 className=\"calculator\"> Calculator App </h1>\n                    <Result result={this.state.result}/>\n                    <KeyPad onClick={this.onClick}/>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass Result extends React.Component {\r\n    render() {\r\n        let { result } = this.props;\r\n        return ( \r\n        <> \r\n           <div className = \"result\" >\r\n            <p> { result } </p> \r\n           </div > \r\n           \r\n           </> )}\r\n}\r\n\r\n\r\n\r\nexport default Result ;","\r\nimport React from 'react';\r\n\r\n\r\nclass KeyPad extends React.Component  {\r\n\r\n    render() {\r\n        return ( \r\n           <>\r\n            <div className = \"button\" >\r\n             < button   name = \"(\" onClick = { e => this.props.onClick(e.target.name) } > ( </button> \r\n            < button   name = \"CE\"onClick = { e => this.props.onClick(e.target.name) } > CE </button> \r\n            <  button  name = \")\"  onClick = { e => this.props.onClick(e.target.name) } > ) </button> \r\n            < button  className = \"buttoncol\" name = \"C\" onClick = { e => this.props.onClick(e.target.name) } > C </button><br/ >\r\n\r\n\r\n            <button name = \"1\"  onClick = { e => this.props.onClick(e.target.name) } > 1 </button> \r\n            < button name = \"2\"onClick = { e => this.props.onClick(e.target.name) } > 2 </button> \r\n            < button name = \"3\" onClick = { e => this.props.onClick(e.target.name) } > 3 </button> \r\n            <button  className = \"buttoncol\" name = \"+\"onClick = { e => this.props.onClick(e.target.name) } > + </button><br/ >\r\n\r\n\r\n            <button name = \"4\" onClick = { e => this.props.onClick(e.target.name) } > 4 </button>\r\n             <button name = \"5\" onClick = { e => this.props.onClick(e.target.name) } > 5 </button> \r\n             < button name = \"6\" onClick = { e => this.props.onClick(e.target.name) } > 6 </button> \r\n             <button  className = \"buttoncol\" name = \"-\" onClick = { e => this.props.onClick(e.target.name) } > - </button><br/ >\r\n\r\n            < button name = \"7\"onClick = { e => this.props.onClick(e.target.name) } > 7 </button> \r\n            < button name = \"8\" onClick = { e => this.props.onClick(e.target.name) } > 8 </button> \r\n            < button name = \"9\" onClick = { e => this.props.onClick(e.target.name) } > 9 </button> \r\n           < button  className = \"buttoncol\" name = \"*\"  onClick = { e => this.props.onClick(e.target.name) } > x </button><br/>\r\n\r\n\r\n            < button name = \".\"   onClick = { e => this.props.onClick(e.target.name) } > . </button> \r\n           < button name = \"0\" onClick = { e => this.props.onClick(e.target.name) } > 0 </button> \r\n            < button name = \"=\" onClick = { e => this.props.onClick(e.target.name) } >= </button> \r\n            <button className = \"buttoncol\"  name = \"/\" onClick = { e => this.props.onClick(e.target.name) } > รท </button><br/>\r\n     </div>\r\n        </>\r\n           \r\n        );\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport default KeyPad;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}